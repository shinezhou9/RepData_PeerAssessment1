{"name":"Daily Acitivity Pattern Analysis ","tagline":" Reproducible Research Project ","body":"Daily Acitivity Pattern Analysis\r\n========================================================\r\n\r\n## Data\r\n\r\n- Dataset : [Activity monitoring data](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip)\r\nThe variables included in this dataset are:\r\n\r\n- steps: Number of steps taking in a 5-minute interval (missing values are coded as NA)\r\n\r\n- date: The date on which the measurement was taken in YYYY-MM-DD format\r\n\r\n- interval: Identifier for the 5-minute interval in which measurement was taken\r\n\r\nThe dataset is stored in a comma-separated-value (CSV) file and there are a total of 17,568 observations in this dataset.\r\n\r\n## Research Objectives\r\n\r\n- Analyze the daily activity pattern, and compare the result with missing value filled in. \r\n- Explore if there is difference of the daily activity pattern between weekdays and weekend.\r\n\r\n## Data Processing\r\nChange the date and interval variable to time format\r\n\r\n```r\r\ndata <- read.csv(\"activity.csv\", header = TRUE, sep = \",\")\r\ndata$date_revised <- as.Date(data$date)\r\ndata$interval_revised <- sprintf(\"%04d\", data$interval)\r\ndata$interval_time <- strptime(data$interval_revised, format = \"%H%M\")\r\n```\r\n\r\n\r\n## Analyze daily activity pattern without missing data\r\n\r\n### split data by date\r\n\r\n```r\r\ns_date <- split(data, data$date_revised)\r\ntotal_steps <- sapply(s_date, function(x) sum(x$steps))\r\n```\r\n\r\n### Make histogram for total number of steps taken each day\r\n\r\n```r\r\nlibrary(ggplot2)\r\nqplot(total_steps, geom = \"histogram\", binwidth = 1000, fill = ..count.., xlab = \"Total steps per day\", ylab = \"Number of Days\", main = \"Total steps per day Frequency\")\r\n```\r\n\r\n![plot of chunk hist_totalstep](./PA1_template_files/figure-html/hist_totalstep.png) \r\n\r\n```r\r\n#plot <- hist(total_steps, main = \"Total steps per day\", xlab =\"total number of steps taken each day\")\r\n```\r\n\r\n### Calculate mean and median total number of steps taken per day\r\n\r\n```r\r\nmean_steps <- mean(total_steps, na.rm = TRUE)\r\nmedian_steps <- median(total_steps, na.rm = TRUE)\r\nmean_steps\r\n```\r\n\r\n```\r\n## [1] 10766\r\n```\r\n\r\n```r\r\nmedian_steps\r\n```\r\n\r\n```\r\n## [1] 10765\r\n```\r\n**mean and median daily steps with out missing value**\r\nmean steps:1.0766 &times; 10<sup>4</sup>\r\nmedian steps:10765.\r\n\r\n###  Plot for average daily activity pattern\r\n\r\n```r\r\nlibrary(scales)\r\ns_pattern <- split(data, data$interval_revised) \r\naverage_steps <- sapply(s_pattern, function(x) mean(x$steps, na.rm = TRUE))\r\nday_pattern <- data.frame(time = data$interval_time[1:288], ave_steps = average_steps)\r\np_day <- ggplot(day_pattern, aes(x = time, y = ave_steps))\r\np_day+geom_line(colour = \"tomato\", size = .7)+labs(x = \"interval\", y = \"Number of steps\", title = \"Average Daily Activity Pattern\")+scale_x_datetime(labels= date_format(\"%H:%M\"))\r\n```\r\n\r\n![plot of chunk seriesplot_activitypattern](./PA1_template_files/figure-html/seriesplot_activitypattern.png) \r\n\r\n```r\r\n#plot(data$interval_time[1:288], average_steps, type = \"l\", col = \"blue\", main = \"Average daily activity pattern\", xlab = \"interval\", ylab = \"Number of steps\")\r\n```\r\n\r\n### Get the most active 5-minute interval\r\n\r\n```r\r\nmax_index <- which(average_steps == max(average_steps))\r\nmax_interval <- data$interval_revised[max_index]\r\nmax_interval\r\n```\r\n\r\n```\r\n## [1] \"0835\"\r\n```\r\n**Most avtive 5-minute interval** 0835 on average across all the days in the dataset, contains the maximum number of steps.\r\n\r\n## Explore daily activity pattern with Missing data\r\n\r\n### Imputing missing valuse\r\nCalculate and report total number of missing values in the dataset. \r\n\r\n```r\r\nbad <- is.na(data$steps)\r\nnum_NA <- length(data$steps[bad])\r\nnum_NA\r\n```\r\n\r\n```\r\n## [1] 2304\r\n```\r\n**Total number of missing values of steps**:  2304\r\n\r\nFill all the missing value by the mean for that 5-minute interval\r\n\r\n**strategy**\r\n\r\n- add a column to dataframe called \"steps_revised\".\r\n- use mean for 5-minute interval steps as the value in \"step_revised\" column if it is missing value in original \"steps\" value. Otherwise, copy the steps number to the \"step_revised\" column.  \r\n- create a new dataset equal to the original one, but replace the original \"step\" column's value by the \"step_revised\" column's value.\r\n\r\n```r\r\ndata$average_steps <- average_steps\r\nfor (i in seq(nrow(data))) {\r\n        if (is.na(data[i, \"steps\"])) {\r\n                data$steps_revised[i] <- data[i, \"average_steps\"]\r\n        }\r\n        else {\r\n                data$steps_revised[i] <- data[i, \"steps\"]\r\n        }\r\n}\r\n```\r\n\r\nCreate a new dataset with missing data filled in. \r\n\r\n```r\r\ndata_revised <- data.frame(steps = data$steps_revised, date = data$date, interval = data$interval)\r\nhead(data_revised)\r\n```\r\n\r\n```\r\n##     steps       date interval\r\n## 1 1.71698 2012-10-01        0\r\n## 2 0.33962 2012-10-01        5\r\n## 3 0.13208 2012-10-01       10\r\n## 4 0.15094 2012-10-01       15\r\n## 5 0.07547 2012-10-01       20\r\n## 6 2.09434 2012-10-01       25\r\n```\r\n\r\n### Plot steps taken each day, with missing value filled in\r\n\r\n```r\r\ns_date_revised <- split(data, data$date_revised)\r\ntotal_steps_revised <- sapply(s_date_revised, function(x) sum(x$steps_revised, na.rm = TRUE))\r\nqplot(total_steps_revised, geom = \"histogram\", binwidth = 1000, fill = ..count.., xlab = \"Total steps per day\", ylab = \"Number of Days\", main = \"Total steps per day(simulated data)\")\r\n```\r\n\r\n![plot of chunk hist_totalsteps_revised](./PA1_template_files/figure-html/hist_totalsteps_revised.png) \r\n\r\n```r\r\n#plot <- hist(total_steps_revised, main = \"Total steps per day_revised\", xlab =\"total number of steps taken each day_revised\")\r\n```\r\n\r\n### Calculate mean and median total number of steps taken per day. \r\n\r\n```r\r\nmean_steps <- mean(total_steps_revised)\r\nmedian_steps <- median(total_steps_revised)\r\nmean_steps\r\n```\r\n\r\n```\r\n## [1] 10766\r\n```\r\n\r\n```r\r\nmedian_steps\r\n```\r\n\r\n```\r\n## [1] 10766\r\n```\r\n**mean and median steps,with missiong value filled in**\r\nmean steps:1.0766 &times; 10<sup>4</sup>\r\nmedian steps: 1.0766 &times; 10<sup>4</sup>.\r\n\r\n**Conclusion:** Mean and median value almost the same after we filled in the missing value with the mean steps for that 5-minute interval. Which means missing values don not have big impact on the research result**\r\n\r\n\r\n## Compare activity patterns between weekdays and weekends\r\n### Create a new factor variable indicating weekday or weekend\r\n\r\n```r\r\nlibrary(timeDate)\r\ndata$day_type <- \"weekdays\"\r\ndata$day_type[isWeekend(data$date_revised)] <- \"weekend\"\r\ndata$day_type <- as.factor(data$day_type)\r\n```\r\n\r\n### Calculate average steps of each 5-minutes interval for weekdays and weekend\r\n\r\n```r\r\n#seperate the weekdays and weekend data into two groups\r\ns_dayType <- split(data, data$day_type)\r\ns_pattern <- lapply(s_dayType, function(x) split(x, x$interval_revised))\r\ndata_weekdays <- s_pattern[[\"weekdays\"]]\r\ndata_weekend <- s_pattern[[\"weekend\"]]\r\n\r\n#calculate the weekdays and weekend's average steps for each 5-minutes interval.\r\naverage_steps_weekdays <- sapply(data_weekdays,function(x) mean(x$steps_revised))\r\naverage_steps_weekend <- sapply(data_weekend,function(x) mean(x$steps_revised))\r\n```\r\n\r\n### Plot activity pattern for weekdays & weekend\r\n\r\n\r\n```r\r\nweekdays <- data.frame(time = data$interval_time[1:288], ave_steps = average_steps_weekdays, day = \"weekdays\")\r\nweekend <- data.frame(time = data$interval_time[1:288], ave_steps = average_steps_weekend, day = \"weekend\")\r\npattern <- rbind(weekdays, weekend)\r\n\r\n\r\n\r\nlibrary(ggplot2)\r\nlibrary(scales)\r\np <- ggplot(pattern, aes(time, ave_steps,group = day))\r\np + geom_line(aes(colour = day), size = .7) + labs(x = \"Interval\", y=\"Number of steps\", title = \"Average daily activity pattern\")+scale_x_datetime(labels= date_format(\"%H:%M\"))\r\n```\r\n\r\n![plot of chunk unnamed-chunk-1](./PA1_template_files/figure-html/unnamed-chunk-1.png) ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}